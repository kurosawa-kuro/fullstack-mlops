# Model configuration for house price prediction using DuckDB
model:
  name: "house_price_prediction"
  best_model: "RandomForest"
  target_variable: "price"
  parameters:
    n_estimators: 100
    max_depth: 10
    min_samples_split: 2
    min_samples_leaf: 1
    random_state: 42
    n_jobs: -1

# Base models for ensemble
base_models:
  RandomForest:
    n_estimators: 100
    max_depth: 10
    min_samples_split: 2
    min_samples_leaf: 1
    random_state: 42
    n_jobs: -1
  LinearRegression:
    fit_intercept: true
    normalize: false
    copy_X: true
    n_jobs: -1

# Alternative models for comparison
alternative_models:
  RandomForest:
    n_estimators: 300
    max_depth: 15
    min_samples_split: 3
    min_samples_leaf: 1
    max_features: 'sqrt'
    random_state: 42
    n_jobs: -1
  GradientBoosting:
    n_estimators: 200
    max_depth: 6
    learning_rate: 0.05
    subsample: 0.8
    random_state: 42

# Ensemble configuration
ensemble:
  method: "voting"
  weights: [0.7, 0.3]
  voting: "soft"

# Data configuration
data:
  source: "duckdb"
  view_name: "v_house_analytics"
  features:
    numerical:
      - "sqft"
      - "bedrooms"
      - "bathrooms"
      - "house_age"
      - "bed_bath_ratio"
      - "condition_score"
      - "year_value"
    categorical:
      - "location_name"
      - "location_type"
      - "condition_name"
      - "decade"
      - "century"

# Training configuration
training:
  test_size: 0.2
  random_state: 42
  cv_folds: 5
  cross_validation: true

# Model evaluation
evaluation:
  metrics:
    - "mae"
    - "r2"
    - "rmse"
  threshold:
    r2_min: 0.7
    mae_max: 100000 